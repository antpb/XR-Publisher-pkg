import type Pose from '../../armature/Pose';
import type { IKChain } from "../rigs/IKChain";
import type { IKData } from '..';
import type { ISolver } from './support/ISolver';
import { vec3 } from 'gl-matrix';
import SwingTwistSolver from "./SwingTwistSolver";
declare class HipSolver implements ISolver {
    isAbs: boolean;
    position: vec3;
    bindHeight: number;
    _swingTwist: SwingTwistSolver;
    initData(pose?: Pose, chain?: IKChain): this;
    setTargetDir(e: vec3, pole?: vec3): this;
    setTargetPos(v: vec3, pole?: vec3): this;
    setTargetPole(v: vec3): this;
    setMovePos(pos: vec3, isAbs?: boolean, bindHeight?: number): this;
    resolve(chain: IKChain, pose: Pose, debug?: any): void;
    ikDataFromPose(chain: IKChain, pose: Pose, out: IKData.Hip): void;
}
export default HipSolver;
