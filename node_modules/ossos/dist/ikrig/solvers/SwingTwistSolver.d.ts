import type Pose from '../../armature/Pose';
import type { IKChain } from '../rigs/IKChain';
import type { ISolver } from './support/ISolver';
import type { IKData } from '..';
import { Transform } from '../../maths';
import { vec3, quat } from 'gl-matrix';
declare class SwingTwistSolver implements ISolver {
    _isTarPosition: boolean;
    _originPoleDir: vec3;
    effectorScale: number;
    effectorPos: vec3;
    effectorDir: vec3;
    poleDir: vec3;
    orthoDir: vec3;
    originPos: vec3;
    initData(pose?: Pose, chain?: IKChain): this;
    setTargetDir(e: vec3, pole?: vec3, effectorScale?: number): this;
    setTargetPos(v: vec3, pole?: vec3): this;
    setTargetPole(v: vec3): this;
    resolve(chain: IKChain, pose: Pose, debug?: any): void;
    ikDataFromPose(chain: IKChain, pose: Pose, out: IKData.Dir): void;
    /** Update Target Data  */
    _update(origin: vec3): void;
    getWorldRot(chain: IKChain, pose: Pose, debug?: any): [quat, Transform];
}
export default SwingTwistSolver;
