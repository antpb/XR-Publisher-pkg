import type Armature from '../armature/Armature';
import type Clip from './Clip';
import { vec3, quat } from 'gl-matrix';
import Animator from './Animator';
import Pose from '../armature/Pose';
declare class Source {
    arm: Armature;
    pose: Pose;
    posHip: vec3;
    constructor(arm: Armature);
}
declare class BoneLink {
    fromIndex: number;
    fromName: string;
    toIndex: number;
    toName: string;
    quatFromParent: quat;
    quatDotCheck: quat;
    wquatFromTo: quat;
    toWorldLocal: quat;
    constructor(fIdx: number, fName: string, tIdx: number, tName: string);
    bind(fromTPose: Pose, toTPose: Pose): this;
}
declare class Retarget {
    hipScale: number;
    anim: Animator;
    map: Map<string, BoneLink>;
    from: Source;
    to: Source;
    setClip(c: Clip): this;
    setClipArmature(arm: Armature): this;
    setClipPoseOffset(rot?: quat, pos?: vec3, scl?: vec3): this;
    setTargetArmature(arm: Armature): this;
    getClipPose(doUpdate?: boolean, incOffset?: boolean): Pose;
    getTargetPose(doUpdate?: boolean, incOffset?: boolean): Pose;
    bind(): boolean;
    animateNext(dt: number): this;
    atKey(k: number): this;
    applyRetarget(): void;
}
export default Retarget;
