import { vec3, quat } from 'gl-matrix';
declare class Transform {
    rot: quat;
    pos: vec3;
    scl: vec3;
    constructor();
    constructor(tran: Transform);
    constructor(rot: quat, pos: vec3, scl: vec3);
    reset(): this;
    copy(t: Transform): this;
    set(r?: quat, p?: vec3, s?: vec3): this;
    setPos(v: vec3): this;
    setRot(v: quat): this;
    setScl(v: vec3): this;
    setUniformScale(v: number): this;
    clone(): Transform;
    mul(tran: Transform): this;
    mul(cr: quat, cp: vec3, cs?: vec3): this;
    pmul(tran: Transform): this;
    pmul(pr: quat, pp: vec3, ps: vec3): this;
    addPos(cp: vec3, ignoreScl?: boolean): this;
    fromMul(tp: Transform, tc: Transform): this;
    fromInvert(t: Transform): this;
    transformVec3(v: vec3, out?: vec3): vec3;
    static mul(tp: Transform, tc: Transform): Transform;
    static invert(t: Transform): Transform;
    static fromPos(v: vec3): Transform;
    static fromPos(x: number, y: number, z: number): Transform;
}
export default Transform;
